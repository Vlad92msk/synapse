import { defineConfig } from 'tsup'

export default defineConfig([
  // =================== COMMONJS –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===================
  // CJS —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å bundle: true –∏ –≤–∫–ª—é—á–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –±–∞–Ω–¥–ª
  // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Node.js –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ legacy –æ–∫—Ä—É–∂–µ–Ω–∏—è—Ö
  {
    entry: {
      index: 'src/index.ts',
      core: 'src/core/index.ts',
      reactive: 'src/reactive/index.ts',
      api: 'src/api/index.ts',
      react: 'src/react/index.ts',
      utils: 'src/utils/index.ts'
    },

    // =================== –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===================
    format: ['cjs'],                 // –¢–æ–ª—å–∫–æ CommonJS
    dts: false,                      // –¢–∏–ø—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è ESM
    splitting: false,                // CJS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç splitting
    sourcemap: false,                // –£–±–∏—Ä–∞–µ–º source maps
    clean: false,                    // –ù–µ –æ—á–∏—â–∞–µ–º (ESM –æ—á–∏—Å—Ç–∏—Ç)
    minify: false,                   // –ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    bundle: true,                    // ‚úÖ CJS –±–∞–Ω–¥–ª–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    target: 'es2022',                // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π JS
    platform: 'node',               // CJS –æ–±—ã—á–Ω–æ –¥–ª—è Node.js

    // =================== –ó–ê–í–ò–°–ò–ú–û–°–¢–ò ===================
    external: [
      'react',                       // –û—Å–Ω–æ–≤–Ω—ã–µ peer dependencies
      'react-dom',
      'rxjs'
    ],

    // =================== –†–ê–°–®–ò–†–ï–ù–ò–Ø –§–ê–ô–õ–û–í ===================
    // @ts-ignore - –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ç–∏–ø—ã tsup
    outExtension: () => ({ '.js': '.cjs' }) // .js ‚Üí .cjs
  },

  // =================== ESM –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===================
  // ESM —Å bundle: false - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫
  // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∫–∞–∫ –µ—Å—Ç—å, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
  {
    entry: {
      index: 'src/index.ts',
      core: 'src/core/index.ts',
      reactive: 'src/reactive/index.ts',
      api: 'src/api/index.ts',
      react: 'src/react/index.ts',
      utils: 'src/utils/index.ts'
    },

    // =================== –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===================
    format: ['esm'],                 // –¢–æ–ª—å–∫–æ ES modules
    dts: true,                       // ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–ª—è ESM
    splitting: false,                // –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è stable external
    sourcemap: false,                // –£–±–∏—Ä–∞–µ–º source maps
    clean: true,                     // ‚úÖ –û—á–∏—â–∞–µ–º dist –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
    minify: false,                   // –ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    bundle: true,                    // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º bundle –¥–ª—è ESM
    target: 'es2022',                // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π JS
    platform: 'neutral',            // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞

    // ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å—Ç—Ä–æ–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ external –¥–ª—è bundle: true
    external: [
      'react',
      'react-dom',
      'rxjs',
    ],

    // ‚úÖ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏—è external
    esbuildOptions: (options) => {
      options.jsx = 'automatic'
      options.jsxDev = false
      options.packages = 'external'  // ‚úÖ –ü—Ä–∏–Ω—É–∂–¥–∞–µ–º external

      // ‚úÖ –î—É–±–ª–∏—Ä—É–µ–º external –≤ esbuild –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      options.external = [
        'react',
        'react-dom',
        'rxjs'
      ]
    },

    // =================== –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê ===================
    onSuccess: async () => {
      console.log('‚úÖ ESM build completed!')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ external –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –±–∞–Ω–¥–ª
      const fs = await import('fs')
      const files = fs.readdirSync('./dist')
      const esmFiles = files.filter(f => f.endsWith('.js') && !f.endsWith('.cjs'))

      let allGood = true

      for (const file of esmFiles) {
        const content = fs.readFileSync(`./dist/${file}`, 'utf8')

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ React –æ—Å—Ç–∞–ª—Å—è –∫–∞–∫ –∏–º–ø–æ—Ä—Ç, –∞ –Ω–µ –∫–∞–∫ –∫–æ–¥
        if (content.includes('function useState') || content.includes('useState:')) {
          console.error(`‚ùå React CODE found in ${file}`)
          allGood = false
        } else if (content.includes('import {useState') || content.includes('import{useState')) {
          console.log(`‚úÖ ${file}: React import found (good - external)`)
        } else {
          console.log(`‚úÖ ${file}: No React`)
        }
      }

      if (allGood) {
        console.log('üéâ SUCCESS: All ESM files use external React imports!')
      }
    }
  }

  // =================== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===================
  // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:

  // minify: true,                    // –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è
  // treeshake: true,                 // –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞
  // sourcemap: true,                 // Source maps –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

  // =================== –ü–†–û–î–í–ò–ù–£–¢–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===================

  // splitting: true,                 // –¢–æ–ª—å–∫–æ –¥–ª—è bundle: true
  // metafile: true,                  // –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–¥–ª–∞
  //
  // esbuildOptions: (options) => {
  //   options.drop = ['console', 'debugger'] // –£–±–∏—Ä–∞–µ–º –ª–æ–≥–∏
  //   options.mangleProps = /^_/     // –°–∂–∏–º–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
  // }

  // =================== –ú–û–ù–ò–¢–û–†–ò–ù–ì ===================

  // watch: true,                     // –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  // onSuccess: 'echo "Build done!"' // –ö–æ–º–∞–Ω–¥–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
])
